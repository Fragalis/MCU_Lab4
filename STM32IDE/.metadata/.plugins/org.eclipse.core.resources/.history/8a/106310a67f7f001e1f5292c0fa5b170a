/*
 * input_reading.c
 *
 *  Created on: Nov 10, 2023
 *      Author: ACER
 */

#include "input_reading.h"

// The buffer for the final result
static GPIO_PinState buttonBuffer[NO_OF_BUTTONS];

// The buffer for debouncing
static GPIO_PinState debounceButtonBuffer1[NO_OF_BUTTONS];
static GPIO_PinState debounceButtonBuffer2[NO_OF_BUTTONS];

// Flag for button hold in 1 second
static uint16_t flagForButtonHold[NO_OF_BUTTONS];

// Counter for button hold in 1 second
static uint16_t counterForButtonHold[NO_OF_BUTTONS];

void button_reading(void)
{
	for(unsigned char i = 0; i < NO_OF_BUTTONS; ++i)
	{
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
		debounceButtonBuffer1[i] = HAL_GPIO_ReadPin(BUTTON_1_GPIO_Port, BUTTON_1_Pin);
		if(debounceButtonBuffer1[i] == debounceButtonBuffer2[i])
		{
			buttonBuffer[i] = debounceButtonBuffer1[i];
			if(buttonBuffer[i] == BUTTON_IS_PRESSED)
			{
				counterForButtonHold[i]++;
				if(counterForButtonHold[i] >= DURATION_FOR_HOLD) {
					flagForButtonHold[i] = 1;
					//TODO
				}
			}

		}
	}
}
