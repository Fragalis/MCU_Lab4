/*
 * scheduler.c
 *
 *  Created on: Nov 29, 2023
 *      Author: ACER
 */

#include "scheduler.h"

typedef struct {
	// Pointer to the task (must be a ’ void ( void ) ’ function )
	void (* pTask)(void);
	// Delay until run
	uint32_t delay;
	// Interval (ms) between subsequent runs
	uint32_t period;
	// Incremented (by scheduler) when task is due to execute
};

void SCH_Init(void)
{

}

void SCH_Update(void)
{

}

void SCH_Dispatch_Tasks(void)
{

}

uint32_t SCH_Add_Tasks(void (* pFunction)(), uint32_t DELAY, uint32_t PERIOD)
{

}

uint8_t SCH_Delete_Task(uint32_t taskID)
{

}
